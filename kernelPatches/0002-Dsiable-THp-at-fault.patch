From eaf28ecda6d13a8a48ea7bf271fc4b96742cee18 Mon Sep 17 00:00:00 2001
From: gkgabel <gkgabel@gmail.com>
Date: Sun, 19 May 2024 20:47:33 +0530
Subject: [PATCH 2/4] Dsiable THp at fault

---
 mm/huge_memory.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/mm/huge_memory.c b/mm/huge_memory.c
index bbac913..3a08184 100644
--- a/mm/huge_memory.c
+++ b/mm/huge_memory.c
@@ -859,8 +859,11 @@ int do_huge_pmd_anonymous_page(struct mm_struct *mm, struct vm_area_struct *vma,
 		}
 		return ret;
 	}
+#if 0
 	gfp = alloc_hugepage_gfpmask(transparent_hugepage_defrag(vma), 0);
 	page = alloc_hugepage_vma(gfp, vma, haddr, HPAGE_PMD_ORDER);
+#endif
+	page=NULL;
 	if (unlikely(!page)) {
 		count_vm_event(THP_FAULT_FALLBACK);
 		return VM_FAULT_FALLBACK;
@@ -1185,8 +1188,11 @@ int do_huge_pmd_wp_page(struct mm_struct *mm, struct vm_area_struct *vma,
 alloc:
 	if (transparent_hugepage_enabled(vma) &&
 	    !transparent_hugepage_debug_cow()) {
+#if 0
 		huge_gfp = alloc_hugepage_gfpmask(transparent_hugepage_defrag(vma), 0);
 		new_page = alloc_hugepage_vma(huge_gfp, vma, haddr, HPAGE_PMD_ORDER);
+#endif
+		new_page = NULL;
 	} else
 		new_page = NULL;
 
-- 
2.7.4

